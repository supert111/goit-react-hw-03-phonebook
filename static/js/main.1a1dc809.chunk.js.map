{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","nameInputId","shortid","generate","phoneInputId","ContactForm","state","name","number","handleChange","element","target","value","setState","handleSubmit","el","preventDefault","props","onSubmit","className","styles","wrapper","this","htmlFor","input_display","type","pattern","title","required","id","onChange","button_prime","Component","ContactList","phoneBook","onDeleteContact","map","nameContact","contact","button","onClick","Filter","App","contacts","filter","addContact","contactName","find","toLowerCase","alert","prevState","deleteContact","contactId","handleFilter","searchByFilter","caseInsensitive","toLocaleLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","seachContact","container","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a1dc809.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2JDZ4\",\"contact\":\"ContactList_contact__cNqGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2sdSz\",\"wrapper\":\"App_wrapper__bBD7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_display\":\"Filter_input_display__2zBCF\"};","import PropTypes from 'prop-types';\r\nimport { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport shortid from 'shortid';\r\n\r\nconst nameInputId = shortid.generate();\r\nconst phoneInputId = shortid.generate();\r\n\r\nclass ContactForm extends Component { \r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = (element) => {\r\n        const { name, value } = element.target;\r\n        this.setState ({ [name]: value }); \r\n    };\r\n\r\n    handleSubmit = (el) => {\r\n        el.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n    }\r\n\r\n   render() {\r\n        return (\r\n            <>\r\n                <form className={styles.wrapper} onSubmit={this.handleSubmit}>\r\n                    <label htmlFor={nameInputId}>Name\r\n                        <input className={styles.input_display}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            id={nameInputId}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                    <label htmlFor={phoneInputId}>Number\r\n                        <input className={styles.input_display}\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            id={phoneInputId}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                    <button className={styles.button_prime} type=\"submit\" >Add contact</button>\r\n                </form>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ phoneBook, onDeleteContact }) => {\r\n    return (\r\n        <>\r\n            <ul>\r\n                {phoneBook.map(nameContact => (\r\n                     <li className={styles.contact} key={nameContact.id}>{nameContact.name}: {nameContact.number}\r\n                     <button className={styles.button} type=\"button\" onClick={()=>onDeleteContact(nameContact.id)}>Delete</button>\r\n                     </li>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n};\r\n\r\nContactList.propTypes = {\r\n    phoneBook: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default ContactList;","import styles from \"./Filter.module.css\"\r\n\r\nconst Filter = ({onChange}) => {\r\n    return (\r\n        <label>Find contacts by name\r\n            <input className={styles.input_display}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={onChange}\r\n            />\r\n        </label>\r\n    )\r\n}\r\nexport default Filter;","import { Component } from \"react\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport styles from \"./App.module.css\"\r\nimport shortid from 'shortid';\r\n\r\nclass App extends Component { \r\n    state = {\r\n        contacts: [\r\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n        ],\r\n        filter: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const contacts = localStorage.getItem('contacts');\r\n        const parsedContacts = JSON.parse(contacts);\r\n\r\n        if (parsedContacts) {\r\n            this.setState({ contacts: parsedContacts})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const nextContacts = this.state.contacts;\r\n         const prevContacts = prevState.contacts;\r\n        if (nextContacts !== prevContacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n        }\r\n    }\r\n\r\n    addContact = ({ name, number }) => {\r\n        const contactName = { name, number, id: shortid.generate()};\r\n        const { contacts } = this.state;\r\n        const duplicateName = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\r\n        if(duplicateName) {\r\n            alert(`${name} is already in contacts.`);\r\n            return;\r\n        }\r\n        if(name === \"\") {\r\n            alert(`Please fill out the form it is empty.`);\r\n        }\r\n        else {\r\n            this.setState((prevState) => ({\r\n                contacts: [...prevState.contacts, contactName,]\r\n            }));\r\n        }         \r\n    };\r\n\r\n    deleteContact = (contactId) => {\r\n        this.setState(({ contacts }) => ({\r\n            contacts: contacts.filter(contact => contact.id !== contactId)\r\n        }))\r\n    };\r\n    \r\n    handleFilter = (element) => {\r\n        const { value } = element.target;\r\n        this.setState ({ filter: value });  \r\n    };\r\n\r\n    searchByFilter = () => {\r\n        const { contacts, filter } = this.state;\r\n        const caseInsensitive = filter.toLocaleLowerCase();\r\n        return contacts.filter(contact => \r\n            contact.name.toLocaleLowerCase().includes(caseInsensitive)\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const seachContact = this.searchByFilter();\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.wrapper}>\r\n                    <h1>Phonebook</h1>\r\n                    <ContactForm onSubmit={this.addContact}/>\r\n                    <h2>Contacts</h2>\r\n                    <Filter onChange={this.handleFilter}/>\r\n                    {this.state.contacts.length !== 0 && \r\n                    <ContactList phoneBook={seachContact} onDeleteContact={this.deleteContact}/>\r\n                    }  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__1cauI\",\"input_display\":\"ContactForm_input_display__yBz5r\",\"button_prime\":\"ContactForm_button_prime__1T_tA\"};"],"sourceRoot":""}